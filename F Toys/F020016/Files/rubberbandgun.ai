%!PS-Adobe-3.0 
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 16.0.0
%%For: (Joosen, Frank) ()
%%Title: (rubberbandgun_glock.ai)
%%CreationDate: 4/18/2014 10:37 AM
%%Canvassize: 16383
%%BoundingBox: -518 18 654 833
%%HiResBoundingBox: -517.9492 18.1016 653.9023 832.1499
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_pattern_AI5 1.0 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Color
%AI7_ImageSettings: 0
%%RGBProcessColor: 0 0 0 (AutoCAD Color)
%%+ 0 0.498039 0.498039 (AutoCAD Color 2)
%%+ 0 0 0 ([Registratie])
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 1 0 () 
%AI3_TemplateBox: 336.5 426.5 336.5 426.5
%AI3_TileBox: -72.3398 140.9004 745.3398 712.1001
%AI3_DocumentPreview: None
%AI5_ArtSize: 2047 999
%AI5_RulerUnits: 1
%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 2
%AI8_OpenToView: -698 1176.1118 0.9 1862 911 18 0 0 9 116 0 0
%AI5_OpenViewLayers: 77
%%PageOrigin:0 0
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
%AI12_CMSettings: 00.MS
%AI7_Thumbnail: 128 92 8
%%BeginData: 8189 Hex Bytes
%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD27FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8A8A8FD43FFA8A8FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF
%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8
%FFA8FD07FFA8FD42FFA8FD33FFA8FD07FFA8A8FD2DFFFD05A8FD11FFA8FD
%31FFA8FD09FFA8FD2EFFA8FFA8FD11FFA8FD3BFFA8A8FD2EFFA8A8FD13FF
%A8FFFFFFA8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FF
%A8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FD0BFFA8FD2EFFA8FFA8FD
%11FFA8FD3BFFA8A8FD2FFFA8FD13FFA8FFFFFFA8FD37FFA8FD2EFFA8FFA8
%FD11FFA8FD3BFFA8A8FD2DFFA8FFFFA8FD0CFFA8FFA8FD07FFA8FD37FFA8
%FD2EFFA8FFFFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFFFA8FD3DFFA8FD2C
%FFA8A8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF7DFFFFA8A8FFFFFFA8FFA8
%A8A8FFFD04A8FD20FFA8A8A8FFFD07A8FFFD05A8FD2CFFA8FFFFFFA8FFFF
%FFA8FFFFFFA8FD15FFA8FD21FFA8FD05FFA8FD4AFFA8FFA8A8A8FFA8A8A8
%FFA8A8FFFFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8FD19FFA8
%FFA8FD4CFFA8FFA8FFA8FD19FFA8FD05FFA8FD05FFA8FD05FFA8FD4EFFFD
%07A8FD13FFA8FFFFFFFD04A8FFFFA8FD06FFA8A8FFFFFFA8FD70FFA8FFFF
%FFA8FD05FFA8FD05FFA8FD68FFA8FFFFFFA8FD0DFFA8FFFFFFA8FD68FFA8
%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFA8FD05FFA8FD68FFA8FFA8FD05
%FF7DFFA8A8A8FFA8FFA8FD06FFA8A8FD7EFFA8FD70FFA8FD0FFFA8FDEFFF
%A8FD0FFFA8FD70FFA8FD8EFFA8FD70FFA8FD0FFFA8FD70FFA8FD0DFFA8FD
%70FFA8FD0FFFA8FD70FFA8FD8EFFA8FD70FFA8FD0FFFA8FDEFFFA8FD0DFF
%A8A8A8FD70FFA8FD0BFFA8FD74FFA8FFA8A8A8FFA8A8A8FFA8FDFCFFFDFC
%FFFDFCFFFDFCFFFDAFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8A8FFFD05A8FFA8FFA8A8A8FF
%A8A8A8FD0BFFA8FD13FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF
%A8FFFFFFA8FFFFFFA8FFFFFFA8FFA8FD2DFFA852FD057DFD06A87DA8A8FF
%A8FD09FFA8FFFD04A87DFD04A8FD067DA8A8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD06FFA8
%FD25FF7DA87DA87DA87D7D7DA8A8A87DA87DFFFFFFA8FD07FFA8FFFFA87D
%A87DA87DA8A87D7DA8A8A87DA852FD25FFA8FD2DFFA87D52527D527DFFA8
%A8FFFD05A8FFA8FD09FFA8FFFD08A87DFF527D52527DFD27FFA8FD06FFA8
%FD25FF7DA8527D7D5252A87DA8A8A87DA87DFFFFFFA8FD07FFA8FFFFA87D
%FF7DA87DA8A87DA852527D527DA8FD25FFA8FD2DFFA8A8FFFD04A852FD08
%A8FFA8FD09FFA8FFFD06A87DFF7DFD05A87D7DFD26FFA8FD06FFA8FD25FF
%A8FD067DFFFD07A8FD0BFFA8A8FFA87DA87DA87DA87DA8FD077DFFFFFFA8
%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF
%FFA8FFA8A8FD06FFFD2AA8FFFD07A8FFFD05A8FFA8FFA8FFA8FFFFFFA8FF
%A8A8A8FFA8A8A8FFA8FFFD05A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD08FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF7DFFFFA8
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFD04
%A8FD3EFFA8FFFFA8FD3DFFA8A8A8FD3CFFA8FFA8A8FD3CFFA8FD3FFFA8FF
%FFA8FD3DFFA8A8FD3DFFA8FFFFA8FD3DFFA8FD3EFFA8FFFFA8FD3DFFA8A8
%FD3DFFA8FFFFA8FD3FFFFD39A8FD07FFA8FD3BFFA8FFA8A8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFFFA8FFFFA8FF
%FFFFA87DFD38A8FD3FFFA8FFFFA8FD3DFFA8A8FD3DFFA8FFA8FD3EFFA8FD
%41FFA8FD3DFFA8FFFFFD0FA8FFA8A8A8FFA8A8A8FFA8FFFFFFA8A8A8FFA8
%A8A8FFA8A8A8FFA8FD11FFA8FFA8FFFFA8A8FD13FFA8A8A8FFA8A8A8FFA8
%A8A8FD05FFA8A8A8FFA8A8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FD04FFA8FFA8FFA8FFA8FFA8FFA8FFA8A8A8FD09FFA8FFA8FD0DFFA8FD17
%FFA8FD11FFA8FD0BFFA8FD0DFFA8FFA8FFA8FFA8FFA8FFA8FFA8A8A8FD04
%FFA8FD0EFFA8FD09FFA8A8A8FD0DFFA8A8FD0FFFA8FD07FFA8FD0FFFA8FD
%0DFFA8FFA8FD09FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFA8A8FD05FFA8FD0D
%FFA8FD09FFA8FFA8FD0DFFA8FD0FFFA8FD18FFA8FD0EFFA8A8FD18FFA8FD
%04FFA8FD0FFFA8FD09FFA8FD27FFA8FD0FFFA8FD0DFFA8FFA8FD09FFA8FD
%0DFFA8FD06FFA8FD17FFA8FFA8FD0DFFA8FD0FFFA8FD07FFA8FD1FFFA8FD
%1FFFA8A8FD0DFFA8FD08FFA8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD11FF
%A8FD06FFA8A8FD0FFFA8FD0DFFA8FFA8FD09FFA8FD0DFFA8FD06FFA8FD17
%FFA8FFFFFFA8FFFFFFA8FFA8FFA8FFA8FFA8FD17FFA8FD11FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FD0BFFA8FD16FFA8FD0DFFA8FD08FFA8A8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FD0FFFA8FD16FFA8A8FD07FFA8FFFFFFA8FFFF
%FFA8FD17FFA8FD1BFFA87DA87DA87DA87D7D52A87DA87DA87D7D52FD04A8
%FD15FFA8FD0FFFFD04A87D7D7DA8A8A87DA87D7D7DA87DA8A8FFA8FD05FF
%A8FD0DFFA8FD08FFA8FD0DFFA8FD05FF5252A8A87DA87DA82752A8A87DA8
%7DA827527D7D7DA8FD0EFFA8FD05FFA8FD0FFFA8A87DA87D5227A87DA87D
%A87D5227A87DA87DA87D7DA8FFFFFFA8A8FD0EFFA8FD16FFA8FD04FF5227
%7D527D527D7D52277D527D527D7D52277D52A8FD10FFA8FD15FFA87D527D
%27527D7D527D527D27527D7D527D527D27FD13FFA8FD08FFA8FD0DFFA8FD
%05FF27277D7D527D527D27277D7D527D527D27277D7DA8FFA8FD13FFA8FD
%0FFFA8FF527D7D52277D52FD047D52277D52FD047D527DFFFFFFA8FD0DFF
%A8FD0AFFA8FD0DFFA8FFFFFFA85252A87DFD04A85252A87DFD04A85252A8
%7DFFA8FD0FFFA8FD16FFA8A8A85252FD06A85252FD06A852A8FD12FFA8FD
%08FFA8FD0EFFA8A8FFFFA827527DA87DA87DA827527DA87DA87DA827527D
%7DA8FFA8FD0FFFA8FFFFFFA8FD0FFFA8FF7D7D7D5227A87D7D7DA87D5227
%A87D7D7DA87D527DFFFFFFA8FD0DFFA8FD0AFFA8FD11FFA85252A87DA87D
%A8A85252A87DA87DA8A85252A87DFD11FFA8FD13FFA8FFFFFF7DA85252A8
%A87DA8A8A85252A8A87DA8A8A8527DFD2BFFA8FFFFA82752A8A87DA87DA8
%2752A8A87DA87DA827527DA8FFFFA8FD0FFFA8FD15FFA8A7A85227A87DA8
%7DA8A85227A87DA87DA8A85252FFFFFFA8FD0DFFA8FD0AFFA8FD11FF7D52
%51A8A8A87DA8A85251A8A8A87DA8A85252A8A8FD15FFA8FD0FFFA8FFFFFF
%7DA85252A8A87DA87DA85252A8A87DA87DA8527DA8FFA8FD1AFFA8FD0DFF
%A8FFA8A85252A8A87DA87DA85252A8A87DA87DA852527DFFFFFFA8FD0FFF
%A8FFFFA8A8FD0DFFA8A8FFFFFFA8A85252A87DA87DA8A85252A87DA87DA8
%7D7D7DA8FD10FFA8FD1BFFA8272727522752275227272752275227522727
%2752FD16FFA8FD0FFFA8FFFFFF7D52272727522752275227272752275227
%52272752FFA8FD0DFFA8FD0CFFA8FD0DFFA8FF7D7D2727527D5252527D27
%27527D5252527D272752FD04FFA8FD0CFFA8A8A8FFFFA8A8FD0DFFA8FD04
%FFA85252277DFD055251277DFD0652517DA8FD0EFFA8A8FD0AFFA8FD0FFF
%A8A8A85252A87DA87DA8A85252A87DA87DA8A85227FD05FFA8FD0BFFA8FD
%07FFA8FD11FFA8A82752FD06A85252FD06A852A87DA8A8FD18FFA8FD11FF
%7D7D52FD077D52FD077D527D7DA87DA8A8FFA8FFA8A8A8FFA8A8A8FFA8A8
%FD08FFA8FFA8A8A8FFA8A8A8FFA8A8A8FFA8FFA8FF7D7D52A8FD057D5252
%A8FD087DA8FD0FFFA8A8A8FD06FFA8FD4DFFA8FFA8FFFFFFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FD12FFA8FD06FFA8FD2AFFA8FD21FFA8FD
%2BFFA8FD06FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD23FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8A8FD07FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD23FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FD04FFFF
%%EndData
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c false def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
		pop pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
userdict /_useSmoothShade false put
userdict /_aicmykps false put
userdict /_forceToCMYK false put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Vectorized Object) (Afbeeldingen overtrekken) (Vectorize.aip)
%AI8_PluginGroupInfo
(Adobe Deform Plugin) (Insteekmodule Omhulsel Adobe ) (Envelope and Warp.aip)
%AI8_PluginGroupInfo
(Adobe Planar Group) (Adobe-insteekmodule Actieve verf) (Live Paint.aip)
%AI8_PluginGroupInfo
(Adobe Flare Plugin) (Flare) (flare.aip)
%AI8_PluginGroupInfo
(Adobe Perspective Plugin Group) (Adobe Perspective Plugin Group) (Perspective.aip)
%AI8_PluginGroupInfo
(Adobe Path Blends) (Adobe Overvloeiingen insteekmodule) (Live Blends.aip)
%AI8_PluginGroupInfo
(Adobe Symbolism) (Adobe Symboolgereedschap) (Symbolism.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe-insteekmodule Patroonpenseel) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe-insteekmodule Patroonpenseel) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Kunstpenseel insteekmodule) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Kunstpenseel insteekmodule) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (Adobe-insteekmodule Kalligrafisch penseel) (Calligraphic Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe-insteekmodule Verstrooiingspenseel) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe-insteekmodule Verstrooiingspenseel) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Pattern Editor Plugin Group) (Adobe Pattern Editor Plugin Group) (Swatch Libraries.aip)
%AI8_PluginGroupInfo
(Pathfinder Suite) (Samengestelde vorm Adobe) (PathFinder Suite.aip)
%AI5_End_NonPrinting--
%AI3_BeginPattern: (Ruiten)
(Ruiten) 24.2119 0.2119 96.2124 72.2119 [
%AI3_Tile
(0 O 0 R 1 g
 1 G
) @
(
%AI6_BeginPatternLayer
2 J 2 j 0.3 w 4 M []0 d0 XR
8.2119 6.2119 m
14.2119 0.2119 L
F
8.2119 0.2119 m
14.2119 6.2119 L
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.743221 0.648188 0.629023 0.813504 0.113725 0.113725 0.105882 Xa
 0.743221 0.648188 0.629023 0.813504 0.113725 0.113725 0.105882 XA
) @
(
%AI6_BeginPatternLayer
2 J 2 j 0.3 w 4 M []0 d0 XR
24.2119 72.2119 m
96.2124 0.2119 L
S
21.2109 69.2129 m
90.2124 0.2119 L
S
21.207 63.2168 m
84.2124 0.2119 L
S
21.2031 57.2207 m
78.2124 0.2119 L
S
21.1987 51.2246 m
72.2124 0.2119 L
S
21.1958 45.2275 m
66.2119 0.2119 L
S
21.1919 39.2314 m
60.2119 0.2119 L
S
21.188 33.2363 m
54.2119 0.2119 L
S
21.1851 27.2402 m
48.2119 0.2119 L
S
21.1812 21.2432 m
42.2119 0.2119 L
S
21.1768 15.2471 m
36.2119 0.2119 L
S
21.1729 9.251 m
30.2119 0.2119 L
S
21.1699 3.2549 m
24.2119 0.2119 L
S
30.2119 72.2119 m
99.2134 3.21 L
S
36.2119 72.2119 m
99.2173 9.2061 L
S
42.2119 72.2119 m
99.2212 15.2021 L
S
48.2119 72.2119 m
99.2251 21.1992 L
S
54.2119 72.2119 m
99.228 27.1953 L
S
60.2119 72.2119 m
99.2319 33.1904 L
S
66.2119 72.2119 m
99.2358 39.1865 L
S
72.2124 72.2119 m
99.2397 45.1836 L
S
78.2124 72.2119 m
99.2427 51.1797 L
S
84.2124 72.2119 m
99.2466 57.1758 L
S
90.2124 72.2119 m
99.2505 63.1719 L
S
96.2124 72.2119 m
99.2554 69.1689 L
S
0.2119 68.7119 m
10.2119 58.7119 L
S
96.2124 72.2119 m
24.2119 0.2119 L
S
90.2124 72.2119 m
21.2109 3.21 L
S
84.2124 72.2119 m
21.207 9.2061 L
S
78.2124 72.2119 m
21.2031 15.2021 L
S
72.2124 72.2119 m
21.1987 21.1982 L
S
66.2119 72.2119 m
21.1958 27.1953 L
S
60.2119 72.2119 m
21.1919 33.1904 L
S
54.2119 72.2119 m
21.188 39.1865 L
S
48.2119 72.2119 m
21.1851 45.1826 L
S
42.2119 72.2119 m
21.1812 51.1797 L
S
36.2119 72.2119 m
21.1768 57.1758 L
S
30.2119 72.2119 m
21.1729 63.1719 L
S
24.2119 72.2119 m
21.1699 69.168 L
S
99.2134 69.2129 m
30.2119 0.2119 L
S
99.2173 63.2168 m
36.2119 0.2119 L
S
99.2212 57.2207 m
42.2119 0.2119 L
S
99.2251 51.2246 m
48.2119 0.2119 L
S
99.228 45.2275 m
54.2119 0.2119 L
S
99.2319 39.2314 m
60.2119 0.2119 L
S
99.2358 33.2363 m
66.2119 0.2119 L
S
99.2397 27.2393 m
72.2124 0.2119 L
S
99.2427 21.2432 m
78.2124 0.2119 L
S
99.2466 15.2471 m
84.2124 0.2119 L
S
99.2505 9.251 m
90.2124 0.2119 L
S
99.2554 3.2539 m
96.2124 0.2119 L
S
0.2119 58.7119 m
10.2119 68.7119 L
S
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI5_Begin_NonPrinting
Np
%AI3_BeginPattern: (Lijnenraster 0,25 inch)
(Lijnenraster 0,25 inch) 32 0.2495 104 72.2495 [
%AI3_Tile
(0 O 0 R 0.743221 0.648188 0.629023 0.813504 0.113725 0.113725 0.105882 Xa
 0.743221 0.648188 0.629023 0.813504 0.113725 0.113725 0.105882 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.3 w 4 M []0 d0 XR
31.75 63.2495 m
104.25 63.2495 L
S
31.75 27.2495 m
104.25 27.2495 L
S
0 63.2495 m
28 63.2495 L
S
31.75 45.2495 m
104.25 45.2495 L
S
31.75 9.2495 m
104.25 9.2495 L
S
0 45.2495 m
28 45.2495 L
S
77 72.4995 m
77 -0.0005 L
S
41 72.4995 m
41 -0.0005 L
S
5 68.1865 m
5 40.2495 L
S
95 72.4995 m
95 -0.0005 L
S
59 72.4995 m
59 -0.0005 L
S
23 68.1865 m
23 40.2495 L
S
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Lijnenraster 1 pica)
(Lijnenraster 1 pica) 35.25 0.2495 107.25 72.2495 [
%AI3_Tile
(0 O 0 R 0.743221 0.648188 0.629023 0.813504 0.113725 0.113725 0.105882 Xa
 0.743221 0.648188 0.629023 0.813504 0.113725 0.113725 0.105882 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.3 w 4 M []0 d0 XR
41.25 72.4995 m
41.25 -0.0005 L
S
65.25 72.4995 m
65.25 -0.0005 L
S
89.25 72.4995 m
89.25 -0.0005 L
S
5 71.2495 m
5 49.2495 L
S
35 6.2495 m
107.5 6.2495 L
S
35 30.2495 m
107.5 30.2495 L
S
35 54.2495 m
107.5 54.2495 L
S
0 54.2495 m
22 54.2495 L
S
35 18.2495 m
107.5 18.2495 L
S
35 42.2495 m
107.5 42.2495 L
S
35 66.2495 m
107.5 66.2495 L
S
0 66.2495 m
22 66.2495 L
S
53.25 72.4995 m
53.25 -0.0005 L
S
77.25 72.4995 m
77.25 -0.0005 L
S
101.25 72.4995 m
101.25 -0.0005 L
S
17 71.2495 m
17 49.2495 L
S
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
0.912474 0.787625 0.619837 0.97467 ([Registratie]) 0 Xs
([Registratie])
Pc
0.912474 0.787625 0.619837 0.97467 0 0 0 (AutoCAD Color) 0 1 Xk
(AutoCAD Color)
Pc
0.838163 0.272862 0.476875 0.120394 0 0.498039 0.498039 (AutoCAD Color 2) 0 1 Xk
(AutoCAD Color 2)
Pc
(Ruiten) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Ruiten)
Pc
(Lijnenraster 0,25 inch) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Lijnenraster 0,25 inch)
Pc
(Lijnenraster 1 pica) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Lijnenraster 1 pica)
Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 1 1 255 79 79 0 50 Lb
(Default) Ln
0 A
u
0 R
0.912474 0.787625 0.619837 0.97467 0 0 0 (AutoCAD Color) 0 1 XK
1 J 1 j 0.708661 w 10 M []0 d0 XR
260.5508 730.373 m
260.5508 666.8774 L
S
U
u
158.3784 666.6836 m
166.2427 681.6226 163.9141 699.8862 152.5527 712.3735 C
S
U
u
158.3784 666.6836 m
156.9194 663.9131 157.9834 660.4849 160.7539 659.0264 c
161.5684 658.5977 162.4746 658.3735 163.395 658.3735 C
S
U
u
-159.2583 803.9043 m
-159.2583 807.0352 -161.7964 809.5737 -164.9272 809.5737 C
S
U
u
-164.9272 795.1738 m
-161.7964 795.1738 -159.2583 797.7119 -159.2583 800.8428 C
S
U
u
-508.8643 328.6543 m
-505.7329 328.6543 -503.1948 331.1924 -503.1948 334.3242 C
S
U
u
-503.1948 337.3848 m
-503.1948 340.5166 -505.7329 343.0547 -508.8643 343.0547 C
S
U
u
-124.7295 245.6494 m
-125.2222 245.7852 -125.7314 245.8545 -126.2427 245.8545 C
S
U
u
52.7363 245.8545 m
55.8672 245.8545 58.4043 248.3926 58.4043 251.5234 C
S
U
u
58.4043 351.7852 m
58.4043 354.916 55.8672 357.4541 52.7363 357.4541 C
S
U
u
-86.5063 70.4121 m
-85.9761 67.7617 -83.6494 65.8545 -80.9473 65.8545 C
S
U
u
257.8306 536.9307 m
258.3604 534.2813 260.687 532.374 263.3896 532.374 C
S
U
u
395.8262 532.374 m
398.957 532.374 401.4961 534.9121 401.4961 538.043 c
401.4961 538.416 401.459 538.7891 401.3848 539.1543 C
S
U
u
397.0723 712.3735 m
400.2031 712.3735 402.7422 714.9116 402.7422 718.043 C
S
U
u
252.0469 658.3735 m
256.7432 658.3735 260.5508 662.1807 260.5508 666.8774 C
S
U
u
252.0469 658.3735 m
314.6377 658.3735 L
S
U
u
314.6377 658.3735 m
319.334 658.3735 323.1416 662.1807 323.1416 666.8774 C
S
U
u
314.2266 825.8574 m
318.5029 830.1348 L
S
U
u
322.5117 831.7954 m
362.8232 831.7954 L
S
U
u
366.4531 830.4814 m
372 825.8574 L
S
U
u
366.4531 830.4814 m
365.4336 831.3301 364.1494 831.7954 362.8232 831.7954 C
S
U
u
322.5117 831.7954 m
321.0078 831.7954 319.5664 831.1978 318.5029 830.1348 C
S
U
u
52.7363 245.8545 m
39.0039 245.8545 27.8711 234.7217 27.8711 220.9893 c
27.8711 219.3516 28.0332 217.7188 28.3535 216.1123 C
S
U
u
397.0723 712.3735 m
383.3398 712.3735 372.207 701.2412 372.207 687.5083 c
372.207 685.8711 372.3691 684.2373 372.6895 682.6318 C
S
U
u
-45.854 730.3735 m
-45.854 690.7734 L
S
U
u
-45.854 690.7734 m
-62.8618 690.7734 L
S
U
u
-62.8618 690.7734 m
-68.5308 690.7734 L
S
U
u
-71.3657 693.6084 m
-71.3657 695.0254 L
S
U
u
-68.5308 697.8604 m
-62.8618 697.8604 L
S
U
u
-62.8618 697.8604 m
-62.8618 712.3735 L
S
U
u
-45.854 690.7734 m
-28.8462 690.7734 L
S
U
u
-28.8462 690.7734 m
-23.1768 690.7734 L
S
U
u
-20.3418 693.6084 m
-20.3418 695.0254 L
S
U
u
-23.1768 697.8604 m
-28.8462 697.8604 L
S
U
u
-28.8462 697.8604 m
-28.8462 712.3735 L
S
U
u
-68.5308 697.8604 m
-70.0967 697.8604 -71.3657 696.5908 -71.3657 695.0254 C
S
U
u
-71.3657 693.6084 m
-71.3657 692.043 -70.0967 690.7734 -68.5308 690.7734 C
S
U
u
-20.3418 695.0254 m
-20.3418 696.5908 -21.6113 697.8604 -23.1768 697.8604 C
S
U
u
-23.1768 690.7734 m
-21.6113 690.7734 -20.3418 692.043 -20.3418 693.6084 C
S
U
u
-28.8462 712.3735 m
152.5527 712.3735 L
S
U
u
-45.854 730.3735 m
-122.3892 730.3735 L
S
U
u
-130.8931 738.8774 m
-130.8931 775.8696 L
S
U
u
-122.3892 784.3735 m
272.7417 784.3735 L
S
U
u
-122.3892 784.3735 m
-127.0859 784.3735 -130.8931 780.5664 -130.8931 775.8696 C
S
U
u
-130.8931 738.8774 m
-130.8931 734.1807 -127.0859 730.3735 -122.3892 730.3735 C
S
U
u
163.395 658.3735 m
184.3286 658.3735 202.2598 673.3604 205.9746 693.9619 C
S
U
u
211.5537 698.625 m
208.8105 698.625 206.4614 696.6616 205.9746 693.9619 C
S
U
u
252.0469 658.3735 m
233.542 658.3735 L
S
U
u
225.4917 698.625 m
211.5537 698.625 L
S
U
u
233.542 658.3735 m
225.4917 698.625 L
S
U
u
-248.3032 228.8428 m
-248.3032 200.5 L
S
U
u
-231.2954 183.4922 m
-143.6997 183.4922 L
S
U
u
-248.3032 200.5 m
-248.3032 191.1074 -240.689 183.4922 -231.2954 183.4922 C
S
U
u
-231.2944 245.8506 m
-240.6875 245.8516 -248.3027 238.2373 -248.3032 228.8438 C
S
U
u
-143.6997 183.4922 m
-128.0439 183.4922 -115.353 196.1836 -115.353 211.8389 c
-115.353 213.7051 -115.5376 215.5674 -115.9033 217.3975 C
S
U
u
-86.5063 70.4121 m
-106.2876 169.3193 L
S
U
u
51.4902 65.8545 m
54.6211 65.8545 57.1582 68.3926 57.1582 71.5234 c
57.1582 71.8975 57.123 72.2695 57.0488 72.6357 C
S
U
u
-115.9033 217.3975 m
-118.8608 232.1855 L
S
U
u
-231.2944 245.8506 m
-135.5205 245.8438 L
S
U
u
-118.8608 232.1855 m
-120.4492 240.127 -127.4219 245.8438 -135.5205 245.8438 C
S
U
u
-140.8647 169.3193 m
-262.5737 169.3193 L
S
U
u
-231.2954 245.8506 m
-231.2944 245.8506 L
S
U
u
-262.4766 214.6719 m
-262.4766 228.8428 L
S
U
u
-262.4766 228.8428 m
-262.4766 200.5 L
S
U
u
-262.4766 228.8428 m
-262.4766 238.2363 -270.0913 245.8516 -279.4849 245.8516 C
S
U
u
-231.3027 245.8506 m
-231.2954 245.8506 L
S
U
u
-262.5737 169.3193 m
-263.2275 169.3193 L
S
U
u
-268.2217 177.6719 m
-264.4507 184.6904 -262.4766 192.5332 -262.4766 200.5 C
S
U
u
-268.2217 177.6719 m
-269.7036 174.9141 -268.6694 171.4766 -265.9111 169.9941 c
-265.0859 169.5508 -264.1641 169.3193 -263.2275 169.3193 C
S
U
u
-115.9033 217.3975 m
-118.8608 232.1855 L
S
U
u
-140.8647 169.3193 m
-133.5371 169.3193 -126.4941 172.1563 -121.2134 177.2363 C
S
U
u
-106.2876 169.3193 m
-106.979 172.7754 L
S
U
u
-106.979 172.7754 m
-107.8999 177.3809 -112.3804 180.3682 -116.9858 179.4473 c
-118.5767 179.1289 -120.0439 178.3613 -121.2134 177.2363 C
S
U
u
-173.6582 795.1738 m
-173.6582 735.0508 L
S
U
u
-150.981 712.3735 m
-62.8618 712.3735 L
S
U
u
-173.6582 735.0508 m
-173.6582 722.5264 -163.5054 712.3735 -150.981 712.3735 C
S
U
u
-279.4849 245.8516 m
-494.918 245.8545 L
S
U
u
-517.5947 268.5313 m
-517.5947 328.6543 L
S
U
u
-517.5947 268.5313 m
-517.5947 256.0068 -507.4419 245.8545 -494.918 245.8545 C
S
U
u
-517.4063 419.084 m
-517.4063 368.0605 L
S
U
u
-514.5713 365.2266 m
-10.0049 365.2266 L
S
U
u
-7.16992 368.0605 m
-7.16992 419.084 L
S
U
u
-10.0049 421.9189 m
-514.5713 421.9189 L
S
U
u
-514.5713 421.9189 m
-516.1377 421.9189 -517.4063 420.6499 -517.4063 419.084 C
S
U
u
-517.4063 368.0605 m
-517.4063 366.4951 -516.1377 365.2266 -514.5713 365.2266 C
S
U
u
-7.16992 419.084 m
-7.16992 420.6499 -8.43945 421.9189 -10.0049 421.9189 C
S
U
u
-10.0049 365.2266 m
-8.43945 365.2266 -7.16992 366.4951 -7.16992 368.0605 C
S
U
u
-94.792 46.0459 m
-313.709 46.0459 L
S
-90.9746 21.29 m
-482.4688 21.29 L
-483.8193 21.29 -484.9824 22.2441 -485.248 23.5693 C
-489.0654 42.6553 L
-489.1016 42.8389 -489.1201 43.0254 -489.1201 43.2119 c
-489.1201 44.7773 -487.8516 46.0459 -486.2852 46.0459 C
-486.2041 46.0459 L
-486.2852 46.0459 L
-472.1592 46.0459 -460.707 57.499 -460.707 71.625 c
-460.707 73.3096 -460.873 74.9893 -461.2041 76.6416 C
-461.1875 76.5615 L
-493 235.624 L
-493.0371 235.8066 -493.0547 235.9932 -493.0547 236.1797 c
-493.0547 237.7451 -491.7861 239.0137 -490.2207 239.0137 C
-362.6611 239.0137 L
-361.3105 239.0137 -360.1465 238.0605 -359.8818 236.7354 C
-323.3203 53.9258 L
-322.4033 49.3447 -318.3809 46.0459 -313.709 46.0459 C
-94.792 46.0459 L
-93.4404 46.0459 -92.2773 45.0928 -92.0127 43.7676 C
-88.1953 24.6807 L
-88.1582 24.498 -88.1396 24.3115 -88.1396 24.125 c
-88.1396 22.5596 -89.4092 21.29 -90.9746 21.29 C
S
U
0 O
(Ruiten) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
-311.75 50.1611 m
-133.9668 49.7686 L
-132.6157 49.7646 -131.4502 50.7158 -131.1826 52.041 C
-109.2617 160.3965 L
-108.9517 161.9307 -109.9434 163.4258 -111.4785 163.7363 c
-111.6616 163.7734 -111.8472 163.792 -112.0342 163.7939 C
-289.8164 164.1865 L
-291.1675 164.1904 -292.334 163.2383 -292.6016 161.9141 C
-314.5225 53.5576 L
-314.8325 52.0234 -313.8398 50.5283 -312.3057 50.2178 c
-312.1226 50.1807 -311.9365 50.1611 -311.75 50.1611 C
b
u
-343.3022 783.9653 m
-343.3022 755.6226 L
S
U
u
-326.2944 738.6147 m
-238.6982 738.6147 L
S
U
u
-343.3022 755.6226 m
-343.3022 746.2295 -335.6875 738.6147 -326.2944 738.6147 C
S
U
u
-326.292 800.9731 m
-335.6851 800.9741 -343.3008 793.3604 -343.3022 783.9673 C
S
U
u
-238.6982 738.6147 m
-232.8662 738.6147 -227.1763 740.4136 -222.4043 743.7656 C
S
U
u
-235.8633 724.4414 m
-357.5723 724.4414 L
S
U
u
-326.2939 800.9731 m
-326.292 800.9731 L
S
U
u
-357.4751 769.7939 m
-357.4751 783.9653 L
S
U
u
-357.4751 783.9653 m
-357.4751 755.6226 L
S
U
u
-357.4751 783.9653 m
-357.4751 793.3584 -365.0903 800.9736 -374.4839 800.9736 C
S
U
u
-326.3018 800.9731 m
-326.2939 800.9731 L
S
U
u
-357.5723 724.4414 m
-358.2261 724.4414 L
S
U
u
-363.2202 732.7944 m
-359.4492 739.8125 -357.4751 747.6553 -357.4751 755.6226 C
S
U
u
-363.2202 732.7944 m
-364.7021 730.0361 -363.668 726.5986 -360.9097 725.1167 c
-360.085 724.6733 -359.1631 724.4414 -358.2261 724.4414 C
S
U
u
-235.8633 724.4414 m
-228.5356 724.4414 -221.4927 727.2793 -216.2119 732.3589 C
S
U
u
-201.2866 724.4414 m
-201.9775 727.8984 L
S
U
u
-201.9775 727.8984 m
-202.8989 732.5034 -207.3789 735.4902 -211.9844 734.5693 c
-213.5757 734.251 -215.0425 733.4839 -216.2119 732.3589 C
S
U
u
-374.4839 800.9736 m
-326.0449 800.9736 L
S
U
u
-201.2866 724.4414 m
-205.2544 744.2808 L
S
U
u
-80.9473 65.8545 m
-80.9473 54.5156 L
S
U
u
-75.2778 48.8467 m
26.7695 48.8467 L
S
U
u
32.4395 54.5156 m
32.4395 65.8545 L
S
U
u
-80.9473 54.5156 m
-80.9473 51.3848 -78.4087 48.8467 -75.2778 48.8467 C
S
U
u
26.7695 48.8467 m
29.9004 48.8467 32.4395 51.3848 32.4395 54.5156 C
S
U
u
263.3896 532.374 m
263.3896 521.0352 L
S
U
u
269.0586 515.3662 m
371.1055 515.3662 L
S
U
u
376.7754 521.0352 m
376.7754 532.374 L
S
U
u
263.3896 521.0352 m
263.3896 517.9043 265.9277 515.3662 269.0586 515.3662 C
S
U
u
371.1055 515.3662 m
374.2363 515.3662 376.7754 517.9043 376.7754 521.0352 C
S
U
u
-517.5947 351.7852 m
-517.5947 357.4541 L
S
U
u
-517.5947 357.4541 m
-511.9253 357.4541 L
S
U
u
-220.7749 744.2808 m
-205.2544 744.2808 L
S
U
u
-220.7749 744.2808 m
-221.3579 744.2808 -221.9272 744.1011 -222.4043 743.7656 C
S
U
u
591.6182 416.3418 m
591.6182 365.3174 L
S
U
u
588.7842 362.4824 m
84.2168 362.4824 L
S
U
u
81.3828 365.3174 m
81.3828 416.3418 L
S
U
u
84.2168 419.1758 m
588.7842 419.1758 L
S
U
u
591.6182 416.3418 m
591.6182 417.9063 590.3496 419.1758 588.7842 419.1758 C
S
U
u
588.7842 362.4824 m
590.3496 362.4824 591.6182 363.752 591.6182 365.3174 C
S
U
u
84.2168 419.1758 m
82.6514 419.1758 81.3828 417.9063 81.3828 416.3418 C
S
U
u
81.3828 365.3174 m
81.3828 363.752 82.6514 362.4824 84.2168 362.4824 C
S
U
u
225.0342 21.8467 m
228.8516 40.9336 L
S
/BBAccumRotation (3.141593) XT
U
u
231.6309 43.2129 m
450.5479 43.2129 L
S
/BBAccumRotation (3.141593) XT
U
u
460.1592 51.0918 m
496.7207 233.9014 L
S
/BBAccumRotation (3.141593) XT
U
u
499.5 236.1797 m
627.0596 236.1797 L
S
/BBAccumRotation (3.141593) XT
U
u
629.8389 232.7891 m
598.0264 73.7275 L
S
/BBAccumRotation (3.141593) XT
U
u
623.043 43.2129 m
623.124 43.2129 L
S
/BBAccumRotation (3.141593) XT
U
u
625.9043 39.8223 m
622.0869 20.7344 L
S
/BBAccumRotation (3.141593) XT
U
u
619.3076 18.4561 m
227.8135 18.4561 L
S
/BBAccumRotation (3.141593) XT
U
u
450.5479 43.2129 m
455.2197 43.2129 459.2422 46.5098 460.1592 51.0918 C
S
/BBAccumRotation (3.141593) XT
U
u
225.0342 21.8467 m
224.7266 20.3115 225.7227 18.8184 227.2578 18.5117 c
227.4404 18.4746 227.627 18.4561 227.8135 18.4561 C
S
/BBAccumRotation (3.141593) XT
U
u
231.6309 43.2129 m
230.2793 43.2129 229.1162 42.2588 228.8516 40.9336 C
S
/BBAccumRotation (3.141593) XT
U
u
619.3076 18.4561 m
620.6582 18.4561 621.8213 19.4102 622.0869 20.7344 C
S
/BBAccumRotation (3.141593) XT
U
u
625.9043 39.8223 m
626.2109 41.3574 625.2158 42.8496 623.6807 43.1572 c
623.4971 43.1934 623.3115 43.2129 623.124 43.2129 C
S
/BBAccumRotation (3.141593) XT
U
u
499.5 236.1797 m
498.1494 236.1797 496.9854 235.2266 496.7207 233.9014 C
S
/BBAccumRotation (3.141593) XT
U
u
629.8389 232.7891 m
630.1465 234.3242 629.1504 235.8184 627.6152 236.125 c
627.4326 236.1621 627.2461 236.1797 627.0596 236.1797 C
S
/BBAccumRotation (3.141593) XT
U
u
598.043 73.8076 m
595.2725 59.9551 604.2559 46.4795 618.1084 43.709 c
619.7598 43.3789 621.4404 43.2129 623.124 43.2129 C
S
/BBAccumRotation (3.141593) XT
U
u
-501.7773 289.4229 m
14.1289 289.4229 L
S
U
u
15.5449 288.0059 m
15.5449 286.5879 L
S
U
u
14.1289 285.1709 m
-501.7773 285.1709 L
S
U
u
-503.1948 286.5879 m
-503.1948 288.0059 L
S
U
u
-501.7773 289.4229 m
-502.5601 289.4229 -503.1948 288.7881 -503.1948 288.0059 C
S
U
u
-503.1948 286.5879 m
-503.1948 285.8057 -502.5601 285.1709 -501.7773 285.1709 C
S
U
u
15.5449 288.0059 m
15.5449 288.7881 14.9102 289.4229 14.1289 289.4229 C
S
U
u
14.1289 285.1709 m
14.9102 285.1709 15.5449 285.8057 15.5449 286.5879 C
S
U
u
639.1484 331.4893 m
639.1484 328.3574 641.6865 325.8193 644.8174 325.8193 C
S
U
u
644.8174 340.2197 m
641.6865 340.2197 639.1484 337.6816 639.1484 334.5498 C
S
U
u
262.1963 243.0195 m
261.6846 243.0195 261.1758 242.9502 260.6836 242.8145 C
S
U
u
77.5479 248.6885 m
77.5479 245.5576 80.0869 243.0195 83.2178 243.0195 C
S
U
u
83.2178 354.6191 m
80.0869 354.6191 77.5479 352.0811 77.5479 348.9502 C
S
U
u
216.9004 63.0195 m
219.6025 63.0195 221.9297 64.9268 222.46 67.5771 C
S
U
u
107.5996 213.2773 m
110.293 226.7441 101.5596 239.8438 88.0938 242.5371 c
86.4883 242.8574 84.8555 243.0195 83.2178 243.0195 C
S
U
u
384.2568 226.0078 m
384.2568 197.665 L
S
U
u
367.249 180.6572 m
279.6533 180.6572 L
S
U
u
367.249 180.6572 m
376.6426 180.6572 384.2568 188.2725 384.2568 197.665 C
S
U
u
384.2568 226.0078 m
384.2568 235.4014 376.6426 243.0156 367.249 243.0156 C
S
U
u
251.8574 214.5625 m
248.7871 199.2119 258.7422 184.2783 274.0938 181.208 c
275.9238 180.8418 277.7861 180.6572 279.6533 180.6572 C
S
U
u
222.46 67.5771 m
242.2412 166.4844 L
S
U
u
78.9043 69.8008 m
78.29 66.7305 80.2813 63.7441 83.3516 63.1299 c
83.7178 63.0566 84.0898 63.0195 84.4639 63.0195 C
S
U
u
251.8574 214.5625 m
254.8145 229.3506 L
S
U
u
367.248 243.0156 m
271.4736 243.0088 L
S
U
u
271.4736 243.0088 m
263.375 243.0088 256.4023 237.292 254.8145 229.3506 C
S
U
u
276.8184 166.4844 m
398.5273 166.4844 L
S
U
u
367.249 243.0156 m
367.248 243.0156 L
S
U
u
398.4297 211.8369 m
398.4297 226.0078 L
S
U
u
398.4297 226.0078 m
398.4297 197.665 L
S
U
u
415.4385 243.0166 m
406.0449 243.0166 398.4297 235.4014 398.4297 226.0078 C
S
U
u
367.2559 243.0156 m
367.249 243.0156 L
S
U
u
398.5273 166.4844 m
399.1807 166.4844 L
S
U
u
398.4297 197.665 m
398.4297 189.6982 400.4043 181.8555 404.1748 174.8369 C
S
U
u
399.1807 166.4844 m
402.3125 166.4844 404.8506 169.0225 404.8506 172.1533 c
404.8506 173.0898 404.6182 174.0117 404.1748 174.8369 C
S
U
u
251.8574 214.5625 m
254.8145 229.3506 L
S
U
u
257.167 174.4014 m
262.4473 169.3213 269.4902 166.4844 276.8184 166.4844 C
S
U
u
242.2412 166.4844 m
242.9326 169.9404 L
S
U
u
257.167 174.4014 m
253.7822 177.6572 248.3984 177.5537 245.1426 174.1689 c
244.0176 172.999 243.251 171.5322 242.9326 169.9404 C
S
U
u
415.4385 243.0166 m
630.8711 243.0195 L
S
U
u
653.5479 265.6963 m
653.5479 325.8193 L
S
U
u
630.8711 243.0195 m
643.3955 243.0195 653.5479 253.1719 653.5479 265.6963 C
S
U
u
216.9004 63.0195 m
216.9004 51.6807 L
S
U
u
211.2314 46.0117 m
109.1836 46.0117 L
S
U
u
103.5146 51.6807 m
103.5146 63.0195 L
S
U
u
211.2314 46.0117 m
214.3623 46.0117 216.9004 48.5498 216.9004 51.6807 C
S
U
u
103.5146 51.6807 m
103.5146 48.5498 106.0527 46.0117 109.1836 46.0117 C
S
U
u
653.5479 348.9502 m
653.5479 354.6191 L
S
U
u
653.5479 354.6191 m
647.8789 354.6191 L
S
U
u
637.7305 286.5879 m
121.8252 286.5879 L
S
U
u
120.4082 285.1709 m
120.4082 283.7529 L
S
U
u
121.8252 282.3359 m
637.7305 282.3359 L
S
U
u
639.1484 283.7529 m
639.1484 285.1709 L
S
U
u
639.1484 285.1709 m
639.1484 285.9531 638.5137 286.5879 637.7305 286.5879 C
S
U
u
637.7305 282.3359 m
638.5137 282.3359 639.1484 282.9707 639.1484 283.7529 C
S
U
u
121.8252 286.5879 m
121.043 286.5879 120.4082 285.9531 120.4082 285.1709 C
S
U
u
120.4082 283.7529 m
120.4082 282.9707 121.043 282.3359 121.8252 282.3359 C
S
U
u
u
u
-94.0752 416.5215 m
-94.0752 371.168 L
S
U
u
-88.4063 416.5215 m
-94.0752 416.5215 L
S
U
u
-88.4063 371.168 m
-88.4063 416.5215 L
S
U
u
-94.0752 371.168 m
-88.4063 371.168 L
S
U
U
u
u
-84.1543 416.5215 m
-84.1543 371.168 L
S
U
u
-78.4854 416.5215 m
-84.1543 416.5215 L
S
U
u
-78.4854 371.168 m
-78.4854 416.5215 L
S
U
u
-84.1543 371.168 m
-78.4854 371.168 L
S
U
U
u
u
-74.2334 416.5215 m
-74.2334 371.168 L
S
U
u
-68.5635 416.5215 m
-74.2334 416.5215 L
S
U
u
-68.5635 371.168 m
-68.5635 416.5215 L
S
U
u
-74.2334 371.168 m
-68.5635 371.168 L
S
U
U
u
u
-64.3115 416.5215 m
-64.3115 371.168 L
S
U
u
-58.6426 416.5215 m
-64.3115 416.5215 L
S
U
u
-58.6426 371.168 m
-58.6426 416.5215 L
S
U
u
-64.3115 371.168 m
-58.6426 371.168 L
S
U
U
u
u
-54.3906 416.5215 m
-54.3906 371.168 L
S
U
u
-48.7217 416.5215 m
-54.3906 416.5215 L
S
U
u
-48.7217 371.168 m
-48.7217 416.5215 L
S
U
u
-54.3906 371.168 m
-48.7217 371.168 L
S
U
U
u
u
-44.4697 416.5215 m
-44.4697 371.168 L
S
U
u
-38.7998 416.5215 m
-44.4697 416.5215 L
S
U
u
-38.7998 371.168 m
-38.7998 416.5215 L
S
U
u
-44.4697 371.168 m
-38.7998 371.168 L
S
U
U
u
u
-34.5479 416.5215 m
-34.5479 371.168 L
S
U
u
-28.8789 416.5215 m
-34.5479 416.5215 L
S
U
u
-28.8789 371.168 m
-28.8789 416.5215 L
S
U
u
-34.5479 371.168 m
-28.8789 371.168 L
S
U
U
U
u
u
u
168.2881 413.7793 m
168.2881 368.4238 L
S
U
u
162.6182 413.7793 m
168.2881 413.7793 L
S
U
u
162.6182 368.4238 m
162.6182 413.7793 L
S
U
u
168.2881 368.4238 m
162.6182 368.4238 L
S
U
U
u
u
158.3662 413.7793 m
158.3662 368.4238 L
S
U
u
152.6973 413.7793 m
158.3662 413.7793 L
S
U
u
152.6973 368.4238 m
152.6973 413.7793 L
S
U
u
158.3662 368.4238 m
152.6973 368.4238 L
S
U
U
u
u
148.4453 413.7793 m
148.4453 368.4238 L
S
U
u
142.7764 413.7793 m
148.4453 413.7793 L
S
U
u
142.7764 368.4238 m
142.7764 413.7793 L
S
U
u
148.4453 368.4238 m
142.7764 368.4238 L
S
U
U
u
u
138.5244 413.7793 m
138.5244 368.4238 L
S
U
u
132.8545 413.7793 m
138.5244 413.7793 L
S
U
u
132.8545 368.4238 m
132.8545 413.7793 L
S
U
u
138.5244 368.4238 m
132.8545 368.4238 L
S
U
U
u
u
128.6025 413.7793 m
128.6025 368.4238 L
S
U
u
122.9336 413.7793 m
128.6025 413.7793 L
S
U
u
122.9336 368.4238 m
122.9336 413.7793 L
S
U
u
128.6025 368.4238 m
122.9336 368.4238 L
S
U
U
u
u
118.6816 413.7793 m
118.6816 368.4238 L
S
U
u
113.0127 413.7793 m
118.6816 413.7793 L
S
U
u
113.0127 368.4238 m
113.0127 413.7793 L
S
U
u
118.6816 368.4238 m
113.0127 368.4238 L
S
U
U
u
u
108.7607 413.7793 m
108.7607 368.4238 L
S
U
u
103.0908 413.7793 m
108.7607 413.7793 L
S
U
u
103.0908 368.4238 m
103.0908 413.7793 L
S
U
u
108.7607 368.4238 m
103.0908 368.4238 L
S
U
U
U
u
*u
1 D
0.912474 0.787625 0.619837 0.97467 0 0 0 XA
0 J 0 j 0.5 w1 XR
236.3867 382.4414 m
236.4072 382.3145 236.4238 382.2529 236.4238 382.1914 C
236.4248 380.3125 236.4766 378.4316 236.3955 376.5557 C
236.3672 375.8906 236.1367 375.1768 235.7861 374.5918 C
234.709 372.7949 232.9531 371.9922 230.7344 371.9922 C
214.8203 371.9922 198.9063 371.9922 182.9932 371.9932 C
182.7295 371.9932 182.4658 372 182.2031 372.0215 C
179.458 372.2441 177.3018 374.3242 177.2998 376.7939 C
177.293 386.6875 177.2959 396.5811 177.2979 406.4746 C
177.2979 407.9697 177.9756 409.1777 179.2275 410.1172 C
180.3955 410.9941 181.7598 411.291 183.2559 411.29 C
198.9766 411.2793 214.6963 411.2832 230.417 411.2822 C
230.7334 411.2822 231.0508 411.2793 231.3652 411.2598 c
234.249 411.083 236.4248 408.959 236.4277 406.3232 C
236.4287 404.6045 236.4111 402.8857 236.4434 401.168 C
236.4492 400.8594 236.5615 400.4375 236.7969 400.2725 c
237.3633 399.877 238.0625 399.9307 238.7061 400.1621 c
239.2549 400.3604 239.2285 400.8408 239.2305 401.2744 C
239.2373 402.8486 239.2432 404.4219 239.2285 405.9961 C
239.2227 406.5566 239.2207 407.127 239.1133 407.6758 C
238.4209 411.2158 234.9785 413.8311 231.0098 413.8389 C
225.9277 413.8477 220.8467 413.8408 215.7637 413.8408 c
204.7568 413.8408 193.748 413.8457 182.7402 413.8389 c
178.1475 413.8359 174.4912 410.4922 174.4902 406.3164 C
174.4902 396.5029 174.4824 386.6895 174.5078 376.877 C
174.5098 376.1025 174.6426 375.2988 174.8994 374.5605 c
175.9746 371.4766 179.2217 369.4258 182.9297 369.4258 C
198.8789 369.4238 214.8281 369.4248 230.7773 369.4258 C
230.9355 369.4258 231.0938 369.4258 231.252 369.4307 C
235.5049 369.5527 238.9688 372.5508 239.1982 376.4258 C
239.3096 378.3145 239.2139 380.2139 239.21 382.1094 C
239.21 382.6875 239.2188 383.2656 239.1924 383.8438 c
239.1621 384.5254 238.7646 384.9082 238.0283 384.9912 c
237.8027 385.0166 237.5723 385.0098 237.3438 385.0098 C
221.958 385.0117 206.5713 385.0117 191.1846 385.0117 C
190.9482 385.0117 190.7109 385.0313 190.4414 385.041 C
190.4414 385.2871 190.4414 385.4785 190.4414 385.6699 C
190.4414 390.6963 190.4414 395.7227 190.4404 400.75 c
190.4404 400.9912 190.4971 401.2559 190.4063 401.4668 c
190.293 401.7266 190.1074 402.0488 189.8564 402.1543 c
188.5996 402.6855 187.6504 402.1172 187.6504 400.8818 C
187.6504 395.293 187.6504 389.7031 187.6504 384.1133 C
187.6504 382.9004 188.1611 382.4414 189.5049 382.4414 C
204.8896 382.4414 220.2773 382.4414 235.6631 382.4414 C
235.8896 382.4414 236.1172 382.4414 236.3867 382.4414 C
s
223.6348 393.8145 m
223.7842 393.6855 223.9131 393.5791 224.0381 393.4678 C
225.6143 392.0684 227.1807 390.6602 228.7734 389.2783 C
229.0361 389.0498 229.4199 388.793 229.7451 388.7969 C
230.4893 388.8066 230.9121 389.3408 231.2168 389.8936 c
231.4746 390.3604 231.1563 390.7148 230.7969 391.0322 c
229.3447 392.3184 227.8984 393.6074 226.4482 394.8945 C
226.1748 395.1377 225.8955 395.377 225.5 395.7227 C
225.7285 395.8682 225.9219 395.959 226.0693 396.0918 C
227.6582 397.5254 229.252 398.9531 230.8096 400.4141 c
231.0615 400.6523 231.3145 401.0654 231.2676 401.3574 C
231.168 401.9766 230.6357 402.3857 230.0098 402.6162 c
229.4434 402.8252 229.0928 402.4355 228.7441 402.1201 C
227.0205 400.5605 225.3027 398.9961 223.5811 397.4336 C
223.4541 397.3184 223.3223 397.2061 223.0986 397.0098 C
223.0986 397.3154 223.0986 397.4883 223.0986 397.6621 C
223.0986 398.8506 223.1191 400.0391 223.085 401.2266 C
223.0742 401.543 223.001 401.9648 222.7734 402.1465 c
222.2266 402.582 221.5244 402.5156 220.873 402.3164 C
220.3174 402.1445 220.2891 401.6855 220.2891 401.2383 C
220.2891 397.4316 220.2871 393.627 220.291 389.8203 C
220.293 388.9209 220.6621 388.6172 221.7031 388.6191 C
222.7354 388.623 223.0898 388.9268 223.0967 389.8408 c
223.1045 390.8525 223.1182 391.8652 223.0889 392.875 C
223.0762 393.2891 223.2061 393.5889 223.6348 393.8145 C
s
193.0342 395.4863 m
193.0635 395.4863 193.0928 395.4863 193.1221 395.4863 C
193.1221 394.5098 192.9727 393.5088 193.1523 392.5596 C
193.5879 390.2539 196.0342 388.6465 198.5869 388.8496 C
201.3945 389.0723 203.3916 390.8926 203.4697 393.3555 C
203.5146 394.7676 203.5137 396.1816 203.4717 397.5918 C
203.3926 400.1992 201.1064 402.1338 198.1787 402.1133 C
195.3018 402.0938 193.083 400.1104 193.0352 397.5088 C
193.0234 396.835 193.0342 396.1602 193.0342 395.4863 C
s
206.6553 395.6895 m
206.6445 395.6895 206.6328 395.6895 206.6221 395.6895 C
206.6221 394.9824 206.5928 394.2754 206.6318 393.5703 c
206.6592 393.0781 206.7119 392.5703 206.8691 392.1025 C
208.0098 388.709 213.0547 387.5586 215.8408 390.0469 C
216.8633 390.959 217.1729 392.0918 217.0195 393.3535 c
217.001 393.5029 216.9258 393.6846 216.8086 393.7793 c
216.2402 394.2354 215.5674 394.1592 214.9121 394.0049 C
214.3418 393.8701 214.2725 393.4326 214.2637 392.9727 C
214.2461 392.0693 213.8945 391.627 212.9287 391.4473 C
212.4072 391.3506 211.8389 391.3184 211.3164 391.3945 C
210.2295 391.5566 209.4473 392.4277 209.4326 393.4326 C
209.4111 394.9258 209.4053 396.4199 209.4346 397.9121 c
209.459 399.0938 210.5322 399.9912 211.8584 399.999 C
213.4375 400.0078 214.1953 399.3809 214.2695 398.001 C
214.3027 397.373 214.5654 397.0869 215.251 397.0215 C
215.5938 396.9883 215.9521 397.0166 216.2959 397.0654 c
216.749 397.1309 216.9971 397.4004 217.0361 397.8242 c
217.1455 398.9766 216.8701 400.0273 216.0479 400.9287 C
214.7744 402.3262 212.3545 402.9268 210.3135 402.3613 c
208.3086 401.8047 206.8252 400.1865 206.667 398.2891 C
206.5947 397.4268 206.6553 396.5566 206.6553 395.6895 C
s
*U
0 D
236.3867 382.4414 m
236.1172 382.4414 235.8896 382.4414 235.6631 382.4414 C
220.2773 382.4414 204.8896 382.4414 189.5049 382.4414 C
188.1611 382.4414 187.6504 382.9004 187.6504 384.1133 C
187.6504 389.7031 187.6504 395.293 187.6504 400.8818 C
187.6504 402.1172 188.5996 402.6855 189.8564 402.1543 c
190.1074 402.0488 190.293 401.7266 190.4063 401.4668 c
190.4971 401.2559 190.4404 400.9912 190.4404 400.75 c
190.4414 395.7227 190.4414 390.6963 190.4414 385.6699 C
190.4414 385.4785 190.4414 385.2871 190.4414 385.041 C
190.7109 385.0313 190.9482 385.0117 191.1846 385.0117 C
206.5713 385.0117 221.958 385.0117 237.3438 385.0098 C
237.5723 385.0098 237.8027 385.0166 238.0283 384.9912 c
238.7646 384.9082 239.1621 384.5254 239.1924 383.8438 c
239.2188 383.2656 239.21 382.6875 239.21 382.1094 C
239.2139 380.2139 239.3096 378.3145 239.1982 376.4258 C
238.9688 372.5508 235.5049 369.5527 231.252 369.4307 C
231.0938 369.4258 230.9355 369.4258 230.7773 369.4258 C
214.8281 369.4248 198.8789 369.4238 182.9297 369.4258 C
179.2217 369.4258 175.9746 371.4766 174.8994 374.5605 c
174.6426 375.2988 174.5098 376.1025 174.5078 376.877 C
174.4824 386.6895 174.4902 396.5029 174.4902 406.3164 C
174.4912 410.4922 178.1475 413.8359 182.7402 413.8389 c
193.748 413.8457 204.7568 413.8408 215.7637 413.8408 c
220.8467 413.8408 225.9277 413.8477 231.0098 413.8389 C
234.9785 413.8311 238.4209 411.2158 239.1133 407.6758 C
239.2207 407.127 239.2227 406.5566 239.2285 405.9961 C
239.2432 404.4219 239.2373 402.8486 239.2305 401.2744 C
239.2285 400.8408 239.2549 400.3604 238.7061 400.1621 c
238.0625 399.9307 237.3633 399.877 236.7969 400.2725 c
236.5615 400.4375 236.4492 400.8594 236.4434 401.168 C
236.4111 402.8857 236.4287 404.6045 236.4277 406.3232 C
236.4248 408.959 234.249 411.083 231.3652 411.2598 c
231.0508 411.2793 230.7334 411.2822 230.417 411.2822 C
214.6963 411.2832 198.9766 411.2793 183.2559 411.29 C
181.7598 411.291 180.3955 410.9941 179.2275 410.1172 C
177.9756 409.1777 177.2979 407.9697 177.2979 406.4746 C
177.2959 396.5811 177.293 386.6875 177.2998 376.7939 C
177.3018 374.3242 179.458 372.2441 182.2031 372.0215 C
182.4658 372 182.7295 371.9932 182.9932 371.9932 C
198.9063 371.9922 214.8203 371.9922 230.7344 371.9922 C
232.9531 371.9922 234.709 372.7949 235.7861 374.5918 C
236.1367 375.1768 236.3672 375.8906 236.3955 376.5557 C
236.4766 378.4316 236.4248 380.3125 236.4238 382.1914 C
236.4238 382.2529 236.4072 382.3145 236.3867 382.4414 C
s
223.6348 393.8145 m
223.2061 393.5889 223.0762 393.2891 223.0889 392.875 C
223.1182 391.8652 223.1045 390.8525 223.0967 389.8408 c
223.0898 388.9268 222.7354 388.623 221.7031 388.6191 C
220.6621 388.6172 220.293 388.9209 220.291 389.8203 C
220.2871 393.627 220.2891 397.4316 220.2891 401.2383 C
220.2891 401.6855 220.3174 402.1445 220.873 402.3164 C
221.5244 402.5156 222.2266 402.582 222.7734 402.1465 c
223.001 401.9648 223.0742 401.543 223.085 401.2266 C
223.1191 400.0391 223.0986 398.8506 223.0986 397.6621 C
223.0986 397.4883 223.0986 397.3154 223.0986 397.0098 C
223.3223 397.2061 223.4541 397.3184 223.5811 397.4336 C
225.3027 398.9961 227.0205 400.5605 228.7441 402.1201 C
229.0928 402.4355 229.4434 402.8252 230.0098 402.6162 c
230.6357 402.3857 231.168 401.9766 231.2676 401.3574 C
231.3145 401.0654 231.0615 400.6523 230.8096 400.4141 c
229.252 398.9531 227.6582 397.5254 226.0693 396.0918 C
225.9219 395.959 225.7285 395.8682 225.5 395.7227 C
225.8955 395.377 226.1748 395.1377 226.4482 394.8945 C
227.8984 393.6074 229.3447 392.3184 230.7969 391.0322 c
231.1563 390.7148 231.4746 390.3604 231.2168 389.8936 c
230.9121 389.3408 230.4893 388.8066 229.7451 388.7969 C
229.4199 388.793 229.0361 389.0498 228.7734 389.2783 C
227.1807 390.6602 225.6143 392.0684 224.0381 393.4678 C
223.9131 393.5791 223.7842 393.6855 223.6348 393.8145 C
s
*u
193.0342 395.4863 m
193.0342 396.1602 193.0234 396.835 193.0352 397.5088 C
193.083 400.1104 195.3018 402.0938 198.1787 402.1133 C
201.1064 402.1338 203.3926 400.1992 203.4717 397.5918 C
203.5137 396.1816 203.5146 394.7676 203.4697 393.3555 C
203.3916 390.8926 201.3945 389.0723 198.5869 388.8496 C
196.0342 388.6465 193.5879 390.2539 193.1523 392.5596 C
192.9727 393.5088 193.1221 394.5098 193.1221 395.4863 C
193.0928 395.4863 193.0635 395.4863 193.0342 395.4863 C
s
1 D
200.668 395.4785 m
200.668 396.1533 200.6777 396.8281 200.666 397.502 C
200.6436 398.6572 199.6182 399.543 198.291 399.5664 c
196.9814 399.5898 195.8662 398.7188 195.835 397.5771 c
195.7969 396.1816 195.7988 394.7832 195.835 393.3877 c
195.8643 392.2441 196.9668 391.3809 198.2871 391.3984 C
199.6133 391.4141 200.6436 392.3008 200.666 393.457 C
200.6787 394.1309 200.668 394.8047 200.668 395.4785 C
s
*U
0 D
206.6553 395.6895 m
206.6553 396.5566 206.5947 397.4268 206.667 398.2891 C
206.8252 400.1865 208.3086 401.8047 210.3135 402.3613 c
212.3545 402.9268 214.7744 402.3262 216.0479 400.9287 C
216.8701 400.0273 217.1455 398.9766 217.0361 397.8242 c
216.9971 397.4004 216.749 397.1309 216.2959 397.0654 c
215.9521 397.0166 215.5938 396.9883 215.251 397.0215 C
214.5654 397.0869 214.3027 397.373 214.2695 398.001 C
214.1953 399.3809 213.4375 400.0078 211.8584 399.999 C
210.5322 399.9912 209.459 399.0938 209.4346 397.9121 c
209.4053 396.4199 209.4111 394.9258 209.4326 393.4326 C
209.4473 392.4277 210.2295 391.5566 211.3164 391.3945 C
211.8389 391.3184 212.4072 391.3506 212.9287 391.4473 C
213.8945 391.627 214.2461 392.0693 214.2637 392.9727 C
214.2725 393.4326 214.3418 393.8701 214.9121 394.0049 C
215.5674 394.1592 216.2402 394.2354 216.8086 393.7793 c
216.9258 393.6846 217.001 393.5029 217.0195 393.3535 c
217.1729 392.0918 216.8633 390.959 215.8408 390.0469 C
213.0547 387.5586 208.0098 388.709 206.8691 392.1025 C
206.7119 392.5703 206.6592 393.0781 206.6318 393.5703 c
206.5928 394.2754 206.6221 394.9824 206.6221 395.6895 C
206.6328 395.6895 206.6445 395.6895 206.6553 395.6895 C
s
200.668 395.4785 m
200.668 394.8047 200.6787 394.1309 200.666 393.457 C
200.6436 392.3008 199.6133 391.4141 198.2871 391.3984 C
196.9668 391.3809 195.8643 392.2441 195.835 393.3877 c
195.7988 394.7832 195.7969 396.1816 195.835 397.5771 c
195.8662 398.7188 196.9814 399.5898 198.291 399.5664 c
199.6182 399.543 200.6436 398.6572 200.666 397.502 C
200.6777 396.8281 200.668 396.1533 200.668 395.4785 C
s
U
u
*u
1 D
-103.3311 384.6523 m
-103.3105 384.5254 -103.2939 384.4629 -103.2939 384.4023 C
-103.293 382.5234 -103.2412 380.6426 -103.3223 378.7656 C
-103.3506 378.1016 -103.5811 377.3867 -103.9316 376.8018 C
-105.0088 375.0059 -106.7646 374.2031 -108.9834 374.2031 C
-124.8975 374.2031 -140.8115 374.2031 -156.7246 374.2031 C
-156.9883 374.2031 -157.252 374.2109 -157.5146 374.2324 C
-160.2598 374.4551 -162.416 376.5352 -162.418 379.0039 C
-162.4248 388.8984 -162.4219 398.791 -162.4199 408.6855 C
-162.4199 410.1797 -161.7422 411.3877 -160.4902 412.3281 C
-159.3223 413.2041 -157.958 413.502 -156.4619 413.5 C
-140.7412 413.4902 -125.0215 413.4941 -109.3008 413.4922 C
-108.9844 413.4922 -108.667 413.4893 -108.3525 413.4697 c
-105.4688 413.293 -103.293 411.1699 -103.29 408.5332 C
-103.2891 406.8145 -103.3066 405.0957 -103.2744 403.3789 C
-103.2686 403.0703 -103.1563 402.6475 -102.9209 402.4824 c
-102.3545 402.0879 -101.6553 402.1406 -101.0117 402.373 c
-100.4629 402.5703 -100.4893 403.0508 -100.4873 403.4844 C
-100.4805 405.0586 -100.4746 406.6328 -100.4893 408.207 C
-100.4951 408.7676 -100.4971 409.3379 -100.6045 409.8867 C
-101.2969 413.4258 -104.7393 416.041 -108.708 416.0488 C
-113.79 416.0586 -118.8711 416.0508 -123.9541 416.0508 c
-134.9609 416.0508 -145.9697 416.0557 -156.9775 416.0488 c
-161.5703 416.0469 -165.2266 412.7021 -165.2275 408.5264 C
-165.2275 398.7129 -165.2354 388.9004 -165.21 379.0879 C
-165.208 378.3125 -165.0752 377.5088 -164.8184 376.7715 c
-163.7432 373.6865 -160.4961 371.6367 -156.7881 371.6367 C
-140.8389 371.6348 -124.8896 371.6348 -108.9404 371.6357 C
-108.7822 371.6357 -108.624 371.6367 -108.4658 371.6406 C
-104.2129 371.7627 -100.749 374.7617 -100.5195 378.6357 C
-100.4082 380.5254 -100.5039 382.4238 -100.5078 384.3193 C
-100.5078 384.8975 -100.499 385.4766 -100.5254 386.0537 c
-100.5557 386.7354 -100.9531 387.1182 -101.6895 387.2012 c
-101.915 387.2266 -102.1455 387.2207 -102.374 387.2207 C
-117.7598 387.2217 -133.1465 387.2217 -148.5332 387.2227 C
-148.7695 387.2227 -149.0068 387.2412 -149.2764 387.252 C
-149.2764 387.498 -149.2764 387.6895 -149.2764 387.8799 C
-149.2764 392.9063 -149.2764 397.9336 -149.2773 402.9609 c
-149.2773 403.2012 -149.2207 403.4668 -149.3115 403.6768 c
-149.4248 403.9365 -149.6104 404.2598 -149.8613 404.3652 c
-151.1182 404.8965 -152.0674 404.3281 -152.0674 403.0918 C
-152.0674 397.5029 -152.0674 391.9141 -152.0674 386.3242 C
-152.0674 385.1113 -151.5566 384.6523 -150.2129 384.6523 C
-134.8281 384.6523 -119.4404 384.6523 -104.0547 384.6523 C
-103.8281 384.6523 -103.6006 384.6523 -103.3311 384.6523 C
s
-116.083 396.0254 m
-115.9336 395.8965 -115.8047 395.7891 -115.6797 395.6777 C
-114.1035 394.2793 -112.5371 392.8711 -110.9443 391.4883 C
-110.6816 391.2598 -110.2979 391.0039 -109.9727 391.0078 C
-109.2285 391.0166 -108.8057 391.5508 -108.501 392.1035 c
-108.2432 392.5703 -108.5615 392.9248 -108.9209 393.2422 c
-110.373 394.5283 -111.8193 395.8174 -113.2695 397.1055 C
-113.543 397.3477 -113.8223 397.5879 -114.2178 397.9326 C
-113.9893 398.0781 -113.7959 398.1689 -113.6484 398.3027 C
-112.0596 399.7363 -110.4658 401.1641 -108.9082 402.625 c
-108.6563 402.8623 -108.4033 403.2754 -108.4502 403.5684 C
-108.5498 404.1865 -109.082 404.5957 -109.708 404.8262 c
-110.2744 405.0352 -110.625 404.6465 -110.9736 404.3301 C
-112.6973 402.7705 -114.415 401.207 -116.1367 399.6445 C
-116.2637 399.5283 -116.3955 399.416 -116.6191 399.2207 C
-116.6191 399.5254 -116.6191 399.6992 -116.6191 399.873 C
-116.6191 401.0605 -116.5986 402.25 -116.6328 403.4375 C
-116.6436 403.7539 -116.7168 404.1758 -116.9443 404.3574 c
-117.4912 404.793 -118.1934 404.7266 -118.8447 404.5264 C
-119.4004 404.3555 -119.4287 403.8965 -119.4287 403.4492 C
-119.4287 399.6426 -119.4307 395.8379 -119.4268 392.0313 C
-119.4248 391.1309 -119.0557 390.8271 -118.0146 390.8301 C
-116.9824 390.833 -116.6279 391.1367 -116.6211 392.0508 c
-116.6133 393.0625 -116.5996 394.0752 -116.6289 395.0859 C
-116.6416 395.5 -116.5117 395.7988 -116.083 396.0254 C
s
-146.6836 397.6973 m
-146.6543 397.6973 -146.625 397.6973 -146.5957 397.6973 C
-146.5957 396.7197 -146.7451 395.7188 -146.5654 394.7695 C
-146.1299 392.4648 -143.6836 390.8564 -141.1309 391.0596 C
-138.3232 391.2832 -136.3262 393.1035 -136.248 395.5664 C
-136.2031 396.9775 -136.2041 398.3916 -136.2461 399.8027 C
-136.3252 402.4102 -138.6113 404.3438 -141.5391 404.3242 C
-144.416 404.3037 -146.6348 402.3203 -146.6826 399.7188 C
-146.6943 399.0449 -146.6836 398.3711 -146.6836 397.6973 C
s
-133.0625 397.9004 m
-133.0732 397.9004 -133.085 397.9004 -133.0957 397.9004 C
-133.0957 397.1934 -133.125 396.4863 -133.0859 395.7813 c
-133.0586 395.2891 -133.0059 394.7813 -132.8486 394.3125 C
-131.708 390.9189 -126.6631 389.7695 -123.877 392.2568 C
-122.8545 393.1689 -122.5449 394.3027 -122.6982 395.5645 c
-122.7168 395.7129 -122.792 395.8945 -122.9092 395.9902 c
-123.4775 396.4453 -124.1504 396.3691 -124.8057 396.2148 C
-125.376 396.0801 -125.4453 395.6426 -125.4541 395.1836 C
-125.4717 394.2793 -125.8232 393.8369 -126.7891 393.6582 C
-127.3105 393.5605 -127.8789 393.5283 -128.4014 393.6055 C
-129.4883 393.7666 -130.2705 394.6377 -130.2852 395.6426 C
-130.3066 397.1367 -130.3125 398.6309 -130.2832 400.123 c
-130.2588 401.3047 -129.1855 402.2012 -127.8594 402.209 C
-126.2803 402.2188 -125.5225 401.5918 -125.4482 400.2109 C
-125.415 399.584 -125.1523 399.2969 -124.4668 399.2314 C
-124.124 399.1992 -123.7656 399.2266 -123.4219 399.2754 c
-122.9688 399.3418 -122.7207 399.6113 -122.6816 400.0352 c
-122.5723 401.1865 -122.8477 402.2383 -123.6699 403.1387 C
-124.9434 404.5361 -127.3633 405.1367 -129.4043 404.5713 c
-131.4092 404.0156 -132.8926 402.3965 -133.0508 400.499 C
-133.123 399.6367 -133.0625 398.7666 -133.0625 397.9004 C
s
*U
0 D
-103.3311 384.6523 m
-103.6006 384.6523 -103.8281 384.6523 -104.0547 384.6523 C
-119.4404 384.6523 -134.8281 384.6523 -150.2129 384.6523 C
-151.5566 384.6523 -152.0674 385.1113 -152.0674 386.3242 C
-152.0674 391.9141 -152.0674 397.5029 -152.0674 403.0918 C
-152.0674 404.3281 -151.1182 404.8965 -149.8613 404.3652 c
-149.6104 404.2598 -149.4248 403.9365 -149.3115 403.6768 c
-149.2207 403.4668 -149.2773 403.2012 -149.2773 402.9609 c
-149.2764 397.9336 -149.2764 392.9063 -149.2764 387.8799 C
-149.2764 387.6895 -149.2764 387.498 -149.2764 387.252 C
-149.0068 387.2412 -148.7695 387.2227 -148.5332 387.2227 C
-133.1465 387.2217 -117.7598 387.2217 -102.374 387.2207 C
-102.1455 387.2207 -101.915 387.2266 -101.6895 387.2012 c
-100.9531 387.1182 -100.5557 386.7354 -100.5254 386.0537 c
-100.499 385.4766 -100.5078 384.8975 -100.5078 384.3193 C
-100.5039 382.4238 -100.4082 380.5254 -100.5195 378.6357 C
-100.749 374.7617 -104.2129 371.7627 -108.4658 371.6406 C
-108.624 371.6367 -108.7822 371.6357 -108.9404 371.6357 C
-124.8896 371.6348 -140.8389 371.6348 -156.7881 371.6367 C
-160.4961 371.6367 -163.7432 373.6865 -164.8184 376.7715 c
-165.0752 377.5088 -165.208 378.3125 -165.21 379.0879 C
-165.2354 388.9004 -165.2275 398.7129 -165.2275 408.5264 C
-165.2266 412.7021 -161.5703 416.0469 -156.9775 416.0488 c
-145.9697 416.0557 -134.9609 416.0508 -123.9541 416.0508 c
-118.8711 416.0508 -113.79 416.0586 -108.708 416.0488 C
-104.7393 416.041 -101.2969 413.4258 -100.6045 409.8867 C
-100.4971 409.3379 -100.4951 408.7676 -100.4893 408.207 C
-100.4746 406.6328 -100.4805 405.0586 -100.4873 403.4844 C
-100.4893 403.0508 -100.4629 402.5703 -101.0117 402.373 c
-101.6553 402.1406 -102.3545 402.0879 -102.9209 402.4824 c
-103.1563 402.6475 -103.2686 403.0703 -103.2744 403.3789 C
-103.3066 405.0957 -103.2891 406.8145 -103.29 408.5332 C
-103.293 411.1699 -105.4688 413.293 -108.3525 413.4697 c
-108.667 413.4893 -108.9844 413.4922 -109.3008 413.4922 C
-125.0215 413.4941 -140.7412 413.4902 -156.4619 413.5 C
-157.958 413.502 -159.3223 413.2041 -160.4902 412.3281 C
-161.7422 411.3877 -162.4199 410.1797 -162.4199 408.6855 C
-162.4219 398.791 -162.4248 388.8984 -162.418 379.0039 C
-162.416 376.5352 -160.2598 374.4551 -157.5146 374.2324 C
-157.252 374.2109 -156.9883 374.2031 -156.7246 374.2031 C
-140.8115 374.2031 -124.8975 374.2031 -108.9834 374.2031 C
-106.7646 374.2031 -105.0088 375.0059 -103.9316 376.8018 C
-103.5811 377.3867 -103.3506 378.1016 -103.3223 378.7656 C
-103.2412 380.6426 -103.293 382.5234 -103.2939 384.4023 C
-103.2939 384.4629 -103.3105 384.5254 -103.3311 384.6523 C
s
-116.083 396.0254 m
-116.5117 395.7988 -116.6416 395.5 -116.6289 395.0859 C
-116.5996 394.0752 -116.6133 393.0625 -116.6211 392.0508 c
-116.6279 391.1367 -116.9824 390.833 -118.0146 390.8301 C
-119.0557 390.8271 -119.4248 391.1309 -119.4268 392.0313 C
-119.4307 395.8379 -119.4287 399.6426 -119.4287 403.4492 C
-119.4287 403.8965 -119.4004 404.3555 -118.8447 404.5264 C
-118.1934 404.7266 -117.4912 404.793 -116.9443 404.3574 c
-116.7168 404.1758 -116.6436 403.7539 -116.6328 403.4375 C
-116.5986 402.25 -116.6191 401.0605 -116.6191 399.873 C
-116.6191 399.6992 -116.6191 399.5254 -116.6191 399.2207 C
-116.3955 399.416 -116.2637 399.5283 -116.1367 399.6445 C
-114.415 401.207 -112.6973 402.7705 -110.9736 404.3301 C
-110.625 404.6465 -110.2744 405.0352 -109.708 404.8262 c
-109.082 404.5957 -108.5498 404.1865 -108.4502 403.5684 C
-108.4033 403.2754 -108.6563 402.8623 -108.9082 402.625 c
-110.4658 401.1641 -112.0596 399.7363 -113.6484 398.3027 C
-113.7959 398.1689 -113.9893 398.0781 -114.2178 397.9326 C
-113.8223 397.5879 -113.543 397.3477 -113.2695 397.1055 C
-111.8193 395.8174 -110.373 394.5283 -108.9209 393.2422 c
-108.5615 392.9248 -108.2432 392.5703 -108.501 392.1035 c
-108.8057 391.5508 -109.2285 391.0166 -109.9727 391.0078 C
-110.2979 391.0039 -110.6816 391.2598 -110.9443 391.4883 C
-112.5371 392.8711 -114.1035 394.2793 -115.6797 395.6777 C
-115.8047 395.7891 -115.9336 395.8965 -116.083 396.0254 C
s
*u
-146.6836 397.6973 m
-146.6836 398.3711 -146.6943 399.0449 -146.6826 399.7188 C
-146.6348 402.3203 -144.416 404.3037 -141.5391 404.3242 C
-138.6113 404.3438 -136.3252 402.4102 -136.2461 399.8027 C
-136.2041 398.3916 -136.2031 396.9775 -136.248 395.5664 C
-136.3262 393.1035 -138.3232 391.2832 -141.1309 391.0596 C
-143.6836 390.8564 -146.1299 392.4648 -146.5654 394.7695 C
-146.7451 395.7188 -146.5957 396.7197 -146.5957 397.6973 C
-146.625 397.6973 -146.6543 397.6973 -146.6836 397.6973 C
s
1 D
-139.0498 397.6895 m
-139.0498 398.3633 -139.04 399.0391 -139.0518 399.7129 C
-139.0742 400.8672 -140.0996 401.7539 -141.4268 401.7773 c
-142.7363 401.8008 -143.8516 400.9297 -143.8828 399.7871 c
-143.9209 398.3926 -143.9189 396.9941 -143.8828 395.5977 c
-143.8535 394.4551 -142.751 393.5918 -141.4307 393.6084 C
-140.1045 393.625 -139.0742 394.5117 -139.0518 395.667 C
-139.0391 396.3418 -139.0498 397.0156 -139.0498 397.6895 C
s
*U
0 D
-133.0625 397.9004 m
-133.0625 398.7666 -133.123 399.6367 -133.0508 400.499 C
-132.8926 402.3965 -131.4092 404.0156 -129.4043 404.5713 c
-127.3633 405.1367 -124.9434 404.5361 -123.6699 403.1387 C
-122.8477 402.2383 -122.5723 401.1865 -122.6816 400.0352 c
-122.7207 399.6113 -122.9688 399.3418 -123.4219 399.2754 c
-123.7656 399.2266 -124.124 399.1992 -124.4668 399.2314 C
-125.1523 399.2969 -125.415 399.584 -125.4482 400.2109 C
-125.5225 401.5918 -126.2803 402.2188 -127.8594 402.209 C
-129.1855 402.2012 -130.2588 401.3047 -130.2832 400.123 c
-130.3125 398.6309 -130.3066 397.1367 -130.2852 395.6426 C
-130.2705 394.6377 -129.4883 393.7666 -128.4014 393.6055 C
-127.8789 393.5283 -127.3105 393.5605 -126.7891 393.6582 C
-125.8232 393.8369 -125.4717 394.2793 -125.4541 395.1836 C
-125.4453 395.6426 -125.376 396.0801 -124.8057 396.2148 C
-124.1504 396.3691 -123.4775 396.4453 -122.9092 395.9902 c
-122.792 395.8945 -122.7168 395.7129 -122.6982 395.5645 c
-122.5449 394.3027 -122.8545 393.1689 -123.877 392.2568 C
-126.6631 389.7695 -131.708 390.9189 -132.8486 394.3125 C
-133.0059 394.7813 -133.0586 395.2891 -133.0859 395.7813 c
-133.125 396.4863 -133.0957 397.1934 -133.0957 397.9004 C
-133.085 397.9004 -133.0732 397.9004 -133.0625 397.9004 C
s
-139.0498 397.6895 m
-139.0498 397.0156 -139.0391 396.3418 -139.0518 395.667 C
-139.0742 394.5117 -140.1045 393.625 -141.4307 393.6084 C
-142.751 393.5918 -143.8535 394.4551 -143.8828 395.5977 c
-143.9189 396.9941 -143.9209 398.3926 -143.8828 399.7871 c
-143.8516 400.9297 -142.7363 401.8008 -141.4268 401.7773 c
-140.0996 401.7539 -139.0742 400.8672 -139.0518 399.7129 C
-139.04 399.0391 -139.0498 398.3633 -139.0498 397.6895 C
s
U
u
0 O
(Ruiten) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
0.912474 0.787625 0.619837 0.97467 0 0 0 (AutoCAD Color) 0 1 XK
1 J 1 j 0.708661 w0 XR
250.8906 162.4326 m
428.6738 162.123 L
430.0254 162.1211 431.1855 161.165 431.4492 159.8398 C
452.9404 51.3975 L
453.2441 49.8623 452.2471 48.3701 450.7109 48.0664 c
450.5273 48.0293 450.3418 48.0117 450.1543 48.0117 C
272.373 48.3213 L
271.0215 48.3242 269.8594 49.2803 269.5967 50.6055 C
248.1045 159.0469 L
247.8008 160.583 248.7988 162.0752 250.334 162.3789 c
250.5176 162.416 250.7031 162.4336 250.8906 162.4326 C
b
U
LB
%AI5_EndLayer--
%AI5_BeginLayer
1 1 1 1 0 0 1 2 79 255 79 0 50 Lb
(Layer_1) Ln
0 A
u
u
0 R
0.912474 0.787625 0.619837 0.97467 0 0 0 (AutoCAD Color) 0 1 XK
1 J 1 j 0.708661 w 10 M []0 d0 XR
233.542 658.3735 m
257.8306 536.9307 L
S
U
u
376.7754 532.374 m
395.8262 532.374 L
S
U
u
401.3848 539.1543 m
372.6895 682.6318 L
S
U
u
402.7422 718.043 m
402.7422 730.3735 L
S
U
u
402.7422 730.3735 m
391.9414 730.3735 L
S
U
U
u
u
312.3418 823.9736 m
-173.6582 823.9736 L
S
U
u
-173.6582 823.9736 m
-173.6582 809.5737 L
S
U
u
-173.6582 809.5737 m
-164.9272 809.5737 L
S
U
u
-159.2583 803.9043 m
-159.2583 800.8428 L
S
U
u
-164.9272 795.1738 m
-173.6582 795.1738 L
S
U
U
u
u
260.5508 730.373 m
391.541 730.373 L
S
U
U
u
u
272.7417 784.3735 m
315.9414 827.5737 L
S
U
u
369.9414 827.5737 m
391.541 809.5737 L
S
U
u
391.541 809.5737 m
373.541 809.5737 L
S
U
u
373.541 809.5737 m
391.541 795.1738 L
S
U
u
391.541 795.1738 m
373.541 795.1738 L
S
U
u
373.541 795.1738 m
391.541 780.7734 L
S
U
u
391.541 780.7734 m
373.541 780.7734 L
S
U
u
373.541 780.7734 m
391.541 766.3735 L
S
U
u
391.541 766.3735 m
373.541 766.3735 L
S
U
u
373.541 766.3735 m
391.541 751.9736 L
S
U
u
391.541 751.9736 m
373.541 751.9736 L
S
U
u
373.541 751.9736 m
391.541 737.5737 L
S
U
u
391.541 737.5737 m
391.541 730.3735 L
S
U
U
u
u
233.1416 658.3735 m
233.542 658.3735 L
S
U
u
323.1416 666.8774 m
323.1416 730.3735 L
S
U
U
u
u
28.3535 216.1123 m
57.0488 72.6357 L
S
U
u
51.4902 65.8545 m
32.4395 65.8545 L
S
U
U
u
u
-517.5947 328.6543 m
-508.8643 328.6543 L
S
U
u
-503.1948 334.3242 m
-503.1948 337.3848 L
S
U
u
-508.8643 343.0547 m
-517.5947 343.0547 L
S
U
u
-517.5947 343.0547 m
-517.5947 351.7852 L
S
U
u
-511.9253 357.4541 m
52.7363 357.4541 L
S
U
u
58.4043 351.7852 m
58.4043 350.2549 L
S
U
u
58.4043 350.2549 m
51.2051 350.2549 L
S
U
u
51.2051 350.2549 m
58.4043 335.8545 L
S
U
u
58.4043 335.8545 m
51.2051 335.8545 L
S
U
u
51.2051 335.8545 m
58.4043 321.4541 L
S
U
u
58.4043 321.4541 m
51.2051 321.4541 L
S
U
u
51.2051 321.4541 m
58.4043 307.0547 L
S
U
u
58.4043 307.0547 m
51.2051 307.0547 L
S
U
u
51.2051 307.0547 m
58.4043 292.6543 L
S
U
u
58.4043 292.6543 m
51.2051 292.6543 L
S
U
u
51.2051 292.6543 m
58.4043 278.2549 L
S
U
u
58.4043 278.2549 m
51.2051 278.2549 L
S
U
u
51.2051 278.2549 m
58.4043 263.8545 L
S
U
u
58.4043 263.8545 m
58.4043 251.5234 L
S
U
U
u
u
107.5996 213.2773 m
78.9043 69.8008 L
S
U
u
84.4639 63.0195 m
103.5146 63.0195 L
S
U
U
u
u
653.5479 325.8193 m
644.8174 325.8193 L
S
U
u
639.1484 331.4893 m
639.1484 334.5498 L
S
U
u
644.8174 340.2197 m
653.5479 340.2197 L
S
U
u
653.5479 340.2197 m
653.5479 348.9502 L
S
U
u
647.8789 354.6191 m
83.2178 354.6191 L
S
U
u
77.5479 348.9502 m
77.5479 347.4199 L
S
U
u
77.5479 347.4199 m
84.748 347.4199 L
S
U
u
84.748 347.4199 m
77.5479 333.0195 L
S
U
u
77.5479 333.0195 m
84.748 333.0195 L
S
U
u
84.748 333.0195 m
77.5479 318.6191 L
S
U
u
77.5479 318.6191 m
84.748 318.6191 L
S
U
u
84.748 318.6191 m
77.5479 304.2197 L
S
U
u
77.5479 304.2197 m
84.748 304.2197 L
S
U
u
84.748 304.2197 m
77.5479 289.8193 L
S
U
u
77.5479 289.8193 m
84.748 289.8193 L
S
U
u
84.748 289.8193 m
77.5479 275.4199 L
S
U
u
77.5479 275.4199 m
84.748 275.4199 L
S
U
u
84.748 275.4199 m
77.5479 261.0195 L
S
U
u
77.5479 261.0195 m
77.5479 248.6885 L
S
U
U
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
